Mögliche Struktur von Snake:
https://codereview.stackexchange.com/questions/66481/snake-game-in-c


x y berechnen:
n*n-Spielfeld, currentfield ^= Position in der Liste
//Unser Spielfeld ist eine lange Liste (Länge:n*n)-> !Achtung, man fängt mit 0 an zu zählen
//Bsp n = 30, currentfield = 30 -> x=0,y=1, n = 30, currentfield = 29 -> x=29,y=0
//Um das zu Umgehen: 1 + ?
int x = currentfield % n; //0^=Erste Splate, geht bis n
int y = (currentfield-x)/n; //0^=Erste Zeile, geht bis n

1).Feld: n*n, Kopf will nach a
 a) Aus der File CAbase das Überprüfen auf Nachbarn umwandeln.
 b) Wand nach: 1 bis n (oben), n*n-n bis n*n (unten), 0n+1 1n+1 2n+1 ... bis n*n-1 (links), n 2n ... bis n*n (rechts)
 -> x<0, x>n-1, y<0, y>n-1
 
 CAbase.h:
 - Das Hauptspiel + Schleife als func
 -Zugriff auf einzelne Zellen
 -CAbase::resetWorldSize
 -> Herz, da packen wir Snake spielregeln etc rein, neue Funktionen
 
 gamewidget.cpp:
 -erstellt Universum! größe, für welches game(Auf variablen m),...
 -start/stop/leeren
 -checkt nach Evolve->win/lose?
 -paint grid
 -mauseeinträge
 ->Grafische Darstellung, Win/Lose Bedinung anpassen, rest kaum veränderung
 
 ---

Spielfeld
nicht kleiner als 10 x 10 (Nutzer) und nicht groesser als 400 x 400
Nutzereingabe n -> Spielfeldgroesse n+2 (Raender links, rechts, oben, unten)
Randwert = -1
Essen = 5
Head = 10
Body/Tail = 10++

Initialisierung
Feld erstellen (default 50 - Nutzer)
Schlange erstellen (unten in der Mitte, senkrecht, Bewegung = 8)
    Laenge 3
1 Nahrung zufaellig ausserhalb der Schlange erzeugen


Evolution
default evolutionsspanne 500ms
1. ausgehend vom head die richtungscodes in array einfuegen
2. letzten richtungsinput auslesen und pruefen (erlaubt, nicht erlaubt)
3. richtungsinput auswerten
    tod (wand, koerper)
    nicht-tod (freies feld, futter)
4. nacharbeiten im nicht-tod fall
    schlange bewegen ausgehend vom head
    futteraufnahme ggf. beruecksichtigen
    
